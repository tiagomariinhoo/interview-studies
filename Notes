C++ Compile Mac:
g++-10 -std=c++17 sol.cpp -o sol
./sol < in

https://techdevguide.withgoogle.com/paths/interview/
https://codeforces.com/blog/entry/77979
- https://interviews.school/
- https://codeforces.com/blog/entry/95106 (Topics)

- Make a great resume

Google Interview

- How to design a scalable system
    - Questions like System Design and Scalability
- Page 36, tips about what say

- Core Concepts

* Data Structures
    - Linked Lists
    - Trees, Tries and Graphs
    - More 1 String Algo like Suffix Array/Suffix Tree
    - Stacks and Queues
    - Heaps
    - Vector / ArrayLists
    - Hash Tables (Important)

* Algorithms
    - BFS
    - DFS
    - Binary Search
    - Merge Sort
    - Quick Sort

* Concepts
    - Bit Manipulation
    - Memory (Stach vs Heap)
    - Recursion
    - DP
    - Big O

Study the complexity time about:
https://en.wikipedia.org/wiki/Permutation#k-permutations_of_nhttps://en.wikipedia.org/wiki/Combination#Number_of_k-combinationsgggg

Site for practice (Google Interview problems):
https://www.interviewbit.com/search/?q=Google

Ultimate interview preparation
http://adilet.org/blog/your-ultimate-guide-to-interview-preparation/


Linkedin Post about interview
https://www.linkedin.com/in/tiago-marinho-538821147/recent-activity/

Recently I have received a lot of queries regarding my preparation that landed me to FAANG company. Below are some of the resources that helped me a lot -

Coding Interview
1. Solve Leetcode medium level problems (at least more than 250+ covering different topics)
2. I have created an xlsx on top/important 500 leetcode questions (https://lnkd.in/dWn73jXd) and a video on How to Crack The Coding Interview? (https://lnkd.in/dsn4cipq). 
3. Clement Mihailescu's AlgoExpert 169 handpicked questions (In case you want to prepare fast and only good questions)
4. I watched my DSA playlist to revise concepts at 2x speed. (https://lnkd.in/dJfS9FkD)

System Design / High Level Design Interview
1. Grokking the System Design Interview - It has step by step discussion and good case studies (https://lnkd.in/dbv8GhK7)
2. Alex Xu's System Design Interview course on ByteByteGo (https://bytebytego.com/) - The course covers all the content from his famous book (Vol 1 and Vol 2) System Design Interview
3. Clement Mihailescu #SystemsExpert (https://lnkd.in/d-5mSpfw) videos to know how real life System Design Interviews go 

Object Oriented Design / Low Level Design Interview
1. Grokking the Object Oriented Design Interview (https://lnkd.in/dcwE3v6V) - A very detailed and step by step approach to various object oriented design case studies. 

API Design Interview
1. Best Practices (https://lnkd.in/d_x39xkK), Implementation (https://lnkd.in/d5fhXZJ7) and Guidelines (https://lnkd.in/dr397Hy2) of API Design
2. Look for use cases like - Stripe (https://lnkd.in/dsM7PpJt) and Twitter (https://lnkd.in/dxiMu8wr) API Documentation
3. #SystemsExpert also has few case studies on API design as well

Schema / Database Design Interview
1. Grokking the Object Oriented Design Interview (https://lnkd.in/dcwE3v6V) - Take the case studies and try to apply Object to Relational Mapping strategy

Behavioral Interview
1. Watch Jeff H Sipe, Interview / Negotiation Coach Youtube channel for behavioral questions (https://lnkd.in/d6rgxbnr)
2. https://lnkd.in/dXBfNNK9

Important DSA topics?
Array, Binary Search, Sliding Window, Matrix, Two Pointer, Intervals, Hash Map, String, Recursion, DP, Trees, Graph, Linked List, Stack, Queue & Heap

If you're interested in interview preparation tips and DSA, make sure to subscribe my YouTube channel:
https://lnkd.in/e-49_sP